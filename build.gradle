buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'


version = '1.18.2-3.2.6-41'
group = 'com.yourname.modid' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'BloodMagic'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: '1.18.2'

    runs {
        client {
            workingDirectory project.file('run')
            
//            properties 'mixin.env.disableRefMap': 'true'

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                bloodmagic {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            
//            properties 'mixin.env.disableRefMap': 'true'

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                bloodmagic {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            
//            properties 'mixin.env.disableRefMap': 'true'

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'bloodmagic', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                bloodmagic {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
	maven {
        url "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = "The Loader"
        url = "https://maven.blamejared.com"
    }
    maven {
        // Curios
        url = "https://maven.theillusivec4.top/"
    }
}

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft 'net.minecraftforge:forge:1.18.2-40.1.51'
    
    // compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}:api")
    // runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}")
        
    
    
    compileOnly fg.deobf("mezz.jei:jei-1.18.2:9.5.5.174:api")
    runtimeOnly fg.deobf("mezz.jei:jei-1.18.2:9.5.5.174")
    
    compileOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}:api")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}")

//    compileOnly fg.deobf("com.blamejared.crafttweaker:CraftTweaker-1.18.2:9.1.154")
    
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}")
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}:api")
}

jar {
    manifest {
        attributes([
            "Specification-Title": "bloodmagic",
            "Specification-Vendor": "bloodmagicsareus",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"bloodmagicsareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}


jar.finalizedBy('reobfJar') 


sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

task srcJar(type: Jar) {
    from(sourceSets.main.java)
    classifier = 'sources'
}

task apiJar(type: Jar) {
    from(sourceSets.main.allJava)
    from(sourceSets.main.output)
    include 'wayoftime/bloodmagic/api/**'

    classifier = 'api'
}

artifacts {
    archives srcJar, apiJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact srcJar
            artifact apiJar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}